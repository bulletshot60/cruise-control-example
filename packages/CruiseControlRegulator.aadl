package CruiseControlRegulator
public
	with AbstractCruiseControlRegulator;
	
	system cruise_control_regulator extends AbstractCruiseControlRegulator::abstract_cruise_control_regulator
		--inherited from parent
		--annex agree {**
		--	assume "speed is positive or 0": current_speed >= 0;
		--	guarantee "speed will only increase if enabled": increase_speed = false or (enabled = true and increase_speed = true);
		--	guarantee "speed will only decrease if enabled": decrease_speed = false or (enabled = true and decrease_speed = true);
		--	guarantee "decrease or increase (not both)": (decrease_speed = false and increase_speed = false) or (decrease_speed != increase_speed);
		--**};
	end cruise_control_regulator;
	
	system implementation cruise_control_regulator.impl extends AbstractCruiseControlRegulator::abstract_cruise_control_regulator.impl
		subcomponents
			--use non-abstract implementation
			increase_speed_button: refined to system increase_speed_button.impl;
			--use non-abstract implementation
			decrease_speed_button: refined to system decrease_speed_button.impl;
		connections
			increase_speed_button_out: port increase_speed_button.change_speed -> increase_speed;
			decrease_speed_button_out: port decrease_speed_button.change_speed -> decrease_speed;
		annex agree {**
			--override abstract in parent
			eq speed_should_increase: bool = if increase_speed_button.increase_speed and decrease_speed_button.decrease_speed then true else increase_speed_button.increase_speed;   
			--override abstract in parent
			eq speed_should_decrease: bool = if increase_speed_button.increase_speed and decrease_speed_button.decrease_speed then false else decrease_speed_button.decrease_speed;
			--inherited from parent
			--assert increase_speed = (speed_should_increase and enabled);
			--assert decrease_speed = (speed_should_decrease and enabled);
		**};
	end cruise_control_regulator.impl;
	
	----------------------------------------------------------------------------
	
	--we need to realize this implementation in order to make it useable
	system increase_speed_button extends AbstractCruiseControlRegulator::change_speed_button
		--inherited from parent
		--annex agree {**
		--	guarantee "speed_change only true when pressed": pressed = change_speed; 
		--**};
	end increase_speed_button;
	
	system implementation increase_speed_button.impl extends AbstractCruiseControlRegulator::change_speed_button.impl
		--inherited from parent
		--annex agree {**
		--	assert change_speed = if pressed then true else false;
		--**};
	end increase_speed_button.impl;
	
	----------------------------------------------------------------------------
	
	--we need to realize this implementation in order to make it useable
	system decrease_speed_button extends AbstractCruiseControlRegulator::change_speed_button
		--inherited from parent
		--annex agree {**
		--	guarantee "speed_change only true when pressed": pressed = change_speed; 
		--**};
	end decrease_speed_button;
	
	system implementation decrease_speed_button.impl extends AbstractCruiseControlRegulator::change_speed_button.impl
		--inherited from parent
		--annex agree {**
		--	assert change_speed = if pressed then true else false;
		--**};
	end decrease_speed_button.impl;
	
end CruiseControlRegulator;
