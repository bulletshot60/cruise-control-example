package AdaptiveCruiseControlDistanceSensorRegulator
public
	with AbstractAdaptiveCruiseControlRegulator;
	
	system adaptive_cruise_control_distance_sensor extends AbstractAdaptiveCruiseControlRegulator::abstract_adaptive_cruise_control_regulator
		--inherited from parent
		--annex agree {**
		--	assume "speed is positive or 0": current_speed >= 0;
		--	guarantee "speed will only increase if enabled": increase_speed = false or (enabled = true and increase_speed = true);
		--	guarantee "speed will only decrease if enabled": decrease_speed = false or (enabled = true and decrease_speed = true);
		--	guarantee "decrease or increase (not both)": (decrease_speed = false and increase_speed = false) or (decrease_speed != increase_speed);
		--**};
	end adaptive_cruise_control_distance_sensor;
	
	system implementation adaptive_cruise_control_distance_sensor.impl extends AbstractAdaptiveCruiseControlRegulator::abstract_adaptive_cruise_control_regulator.impl
		subcomponents
			--use non-abstract implementation
			decision_engine: refined to system decision_engine.impl;
	end adaptive_cruise_control_distance_sensor.impl;
	
	----------------------------------------------------------------------------
	
	--we need to realize this implementation in order to make it useable
	system decision_engine extends AbstractAdaptiveCruiseControlRegulator::decision_engine
		-- data_source_1 is front platooning sensor
		-- data_source_2 is rear platooning sensor
		--inherited from parent
		--annex agree {**
		--	assume "speed is positive or 0": current_speed >= 0;
		--	guarantee "speed will only increase if enabled": increase_speed = false or (enabled = true and increase_speed = true);
		--	guarantee "speed will only decrease if enabled": decrease_speed = false or (enabled = true and decrease_speed = true);
		--	guarantee "decrease or increase (not both)": (decrease_speed = false and increase_speed = false) or (decrease_speed != increase_speed);
		--**};
	end decision_engine;
	
	system implementation decision_engine.impl extends AbstractAdaptiveCruiseControlRegulator::decision_engine.impl
		annex agree {**
			--override variable in parent
			eq front_data_source_outside_threshold: bool = current_speed != data_source_1;
			--override variable in parent
			eq rear_data_source_outside_threshold: bool = front_data_source_outside_threshold = false and current_speed != data_source_2;
			--inherited from parent
			--eq speed_should_increase: bool = if rear_data_source_outside_threshold then
			--	true
			--else
			--	if front_data_source_outside_threshold then
			--		false
			--	else
			--		if increase_speed_requested and decrease_speed_requested then
			--			true
			--		else
			--			increase_speed_requested;
			--eq speed_should_decrease: bool = if front_data_source_outside_threshold then
			--	true
			--else
			--	if rear_data_source_outside_threshold then
			--		false
			--	else
			--		if increase_speed_requested and decrease_speed_requested then
			--			false
			--		else
			--			decrease_speed_requested;
			--assert increase_speed = (speed_should_increase and enabled);
			--assert decrease_speed = (speed_should_decrease and enabled);
		**};
	end decision_engine.impl;
	
end AdaptiveCruiseControlDistanceSensorRegulator;
